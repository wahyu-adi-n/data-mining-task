# -*- coding: utf-8 -*-
"""preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z8doZSGWyr5OT3hlNA3Kw2Trv2vuXkDh

#Tugas 3 Data Mining - Preprocessing 
Nama : Wahyu Adi Nugroho <br>
NIM  : A11.2019.12310 <br>
Kelp : A11.46UG <br>
____________________________________
Kerjakan Latihan tahapan preprocessing data pada slide
sebelumnya, dapat menggunakan dataset yang lain /
dimodifikasi, simpan dalam preprocessing.py atau
preprocessing.ipynb, repositorikan file pada github.com dan
kirimkan URL github melalui Assignment pada kulino (Pada blok
Minggu ke-3).

##1. Import Library Utama
"""

import numpy as np # mengolah matrix
import matplotlib.pyplot as plt # membuat visualisasi data : diagram
import pandas as pd # mengambil, mengolah, memanipulasi data

"""## 2. Import Dataset"""

data_parpol = pd.read_csv('data-parpol.csv')
x = data_parpol.iloc[:, :-1].values # attr1, attr2, attr3
y = data_parpol.iloc[:, -1].values  # label

print(x)
print(y)

"""##3. Menghilangkan Missing Value"""

from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values=np.nan, strategy='mean')
x[:, 1:3] = imputer.fit_transform(x[:, 1:3])

print(x)

"""##4. Encoding data kategori (Atribut)"""

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
ct = ColumnTransformer(transformers = [('encoder', OneHotEncoder(), [0])], remainder="passthrough")
x = np.array(ct.fit_transform(x))

print(x)

"""##5. Encoding data kategori (Class / Label)"""

print(y) # sebelum

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
y = le.fit_transform(y)

print(y) #sesudah

"""##6. Melakukan Feature Scaling"""

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
x[:, 8:] = sc.fit_transform(x[:, 8:])

print(x)

"""##7. Membagi Dataset ke dalam Training dan Test Set"""

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=1)

print(x_train)

print(x_test)

print(y_train)

print(y_test)